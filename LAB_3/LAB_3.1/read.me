Требуется реализовать функцию поиска наибольшей общей подпоследовательности двух строк (функция lcs);

Алгоритм решения задачи методом динамического программирования:
X = x1x2...xN, Y = y1y2...yM - строки


lcs(X, Y):
	Вернуть LCS[N, M] как результат


LCS[i, j] - наибольшая общая подпоследовательность для строк x1x2...xi и y1y2...yj
Каждое значение в таблице LCS вычисляется только один раз по следующим формулам и затем переиспользуется:
LCS[i, j] = LCS[i - 1, j - 1] + xi, если xi = yj
LCS[i, j] = max {LCS[i - 1, j], LCS[i, j - 1]}, если xi ≠ yj
LCS[i, j] = ∅, если i = 0 или j = 0


Альтернативный метод, когда в таблице LCS хранится только длина подпоследовательности (для экономии памяти):
LCS[i, j] = LCS[i - 1, j - 1] + 1, если xi = yj
LCS[i, j] = max {LCS[i - 1, j], LCS[i, j - 1]}, если xi ≠ yj
LCS[i, j] = 0, если i = 0 или j = 0
В этом случае искомая подпоследовательность затем восстанавливается по построенной таблице.
