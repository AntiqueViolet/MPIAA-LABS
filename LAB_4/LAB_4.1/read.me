Реализовать алгоритм Дейкстры поиска кратчайшего пути между парой вершин во взвешенном графе (функция shortest_path).

Алгоритм Дейкстры:
G - граф
start, end - начальная и конечная вершины
G.Vertices - множество вершин графа G
Distance - ассоциативный массив, хранящий для каждой вершины длину текущего минимального пути до нее из start
Parent - ассоциативный массив, хранящий для каждой вершины ее предшественника в кратчайшем пути
Weight(a, b) - вес ребра между вершинами a и b
BuildPath(Parent, s, e) - строит путь из вершины s в вершину e, проходя по ссылкам из Parent из e в s в обратном порядке. Если путь нельзя построить, возвращает признак отсутствия пути


Dijkstra(G, start, end):	
	Для каждой вершины v из G:
		Distance[v] = Infinity
	Distance[start] = 0
	Q = G.Vertices
	Пока Q не пусто:
		u = извлечь вершину из Q с минимальным значением Distance 
		Если u равно end:
			Вернуть BuildPath(Parent, start, end)
		Для каждой вершины v смежной с u:
			Если Distance[v] > Distance[u] + Weight(u, v):
				Distance[v] = Distance[u] + Weight(u, v)
				Parent[v] = u


Для повышения эффективности для Q можно использовать эффективную реализацию очереди с приоритетами (приоритет элементов - значение Distance).
